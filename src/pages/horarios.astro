---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Horarios">
    <script  is:inline src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script  is:inline src="https://momentjs.com/downloads/moment.js"></script>

    <main>
        <div class="mt-10 h-screen">
            <h1 class="text-center text-6xl" id="reloj"></h1>
            
            <table class="table-fixed m-1 overflow-y-auto " style="min-width: 1024px;"  >
                <thead class="h-48">
                    <th class="px-6">Materia</th>
                    <th class="px-6">Hora Inicio</th>
                    <th class="px-6">Hora Fin</th>
                    <th class="px-6">Carreras</th>
                    <th class="px-6">Estado</th>
                </thead>
                <tbody id="tablaHorarios">

                </tbody>
            </table>
        </div><span class=" text-xs font-medium me-2 px-2.5 py-0.5 rounded-full bg-green-900 text-green-300">cpsp</span>
    </main>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>

    <script is:inline>
        var horarios = [];
        var horaActual = "09:15:00.000";

        if (window.jQuery) {
            $(document).ready(function() {
            load();
            });
        } else {
            console.error('jQuery no está cargado correctamente.');
        }

        function load(){
            var url = `http://localhost:1337/api/horarios?populate[1]=Materias&populate[2]=Materias.Carreras&filters%5BDia%5D=${getDayOfWeekToday()}`;

            axios.get(url).then(result => {
                result.data.data.forEach(e => {
                    horarios.push({
                        Nombre: e.attributes.Materias.data.attributes.Nombre,
                        HoraInicio: e.attributes.Horainicio,
                        HoraFin: e.attributes.Horafin,
                        Carreras:  e.attributes.Materias.data.attributes.Carreras.data.map(o => o.attributes.Nombre),
                        Class: "bg-zinc-900",
                        Estado: e.attributes.Estado
                    });
                });

                horarios.sort(compararHoras);
            }).catch(err => {
                console.log(err);
            });
        }

        setInterval(()=>{
            horaActual = getTimeNow();  
            eliminarHorariosAnteriores(horaActual);
            marcarActuales();
            generateTable();
        }, 1000);

        function getDayOfWeekToday(){
            var day = moment().weekday();

            switch(day){
                case 0:
                    return "Domingo";
                break;
                case 1:
                    return "Lunes";
                    break;
                case 2:
                    return "Martes";
                    break;
                case 3:
                    return "Miercoles";
                    break;
                case 4:
                    return "Jueves";
                    break;
                case 5:
                    return "Viernes";
                    break;
                case 6:
                    return "Savado";
                    break;
            }
        }


        function compararHoras(registro1, registro2) {
            // Convierte las horas de cadena a objetos Date para facilitar la comparación
            var hora1 = new Date('2020-01-01T' + registro1.HoraInicio);
            var hora2 = new Date('2020-01-01T' + registro2.HoraInicio);
        
            // Compara las horas
            if (hora1 < hora2) {
            return -1;
            } else if (hora1 > hora2) {
            return 1;
            } else {
            return 0; // Las horas son iguales
            }
        }

        function compareDate(hora1, hora2){
            var hora1 = new Date('2020-01-01T' + hora1);
            var hora2 = new Date('2020-01-01T' + hora2);
        
            // Compara las horas
            if (hora1 < hora2) {
            return -1;
            } else if (hora1 > hora2) {
            return 1;
            } else {
            return 0; // Las horas son iguales
            }
        }


        function generateTable(){
            $("#reloj").text(horaActual.split(".")[0]);
            $("#tablaHorarios tr").remove();

            horarios.forEach(horario =>{
                $("#tablaHorarios").append(`
                    <tr class="backdrop-blur-sm border-b ${horario.Class} ">
                        <td class="px-6">${horario.Nombre}</td>
                        <td class="px-6">${horario.HoraInicio.split(".")[0]}</td>
                        <td class="px-6">${horario.HoraFin.split(".")[0]}</td>
                        <td class="px-6">${horario.Carreras.join(', ')}</td>
                        <td class="px-6">${horario.Estado == 'Normal' ? '<span class="rounded-full bg-green-900 p-1">'+horario.Estado+'</span>':'<span class="rounded-full bg-amber-400 p-1">'+horario.Estado+'</span>' }</td>
                    </tr>
                `)
            })
        }

        function eliminarHorariosAnteriores(hora){
            horarios= horarios.filter(horario => compareDate(horario.HoraFin, hora) >= 0);
        }

        function marcarActuales(){
            horarios.map(o =>{
                if(compareDate(o.HoraInicio, horaActual) <= 0 && compareDate(o.HoraFin, horaActual) >= 0){
                    o.Class = "bg-emerald-500";
                }
            });
        }

        function getTimeNow(){
            // Obtén la fecha y hora actual
            var fechaHoraActual = new Date();

            // Obtiene la hora, los minutos y los segundos
            var horas = fechaHoraActual.getHours();
            var minutos = fechaHoraActual.getMinutes();
            var segundos = fechaHoraActual.getSeconds();

            // Asegúrate de que los componentes tengan dos dígitos
            horas = (horas < 10) ? '0' + horas : horas;
            minutos = (minutos < 10) ? '0' + minutos : minutos;
            segundos = (segundos < 10) ? '0' + segundos : segundos;

            // Crea el string de la hora actual
            return horas + ':' + minutos + ':' + segundos+".000";
        }
    </script>
</Layout>

<style>
</style>